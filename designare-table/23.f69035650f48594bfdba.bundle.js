(window.webpackJsonp=window.webpackJsonp||[]).push([[23,64,65],{139:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(1),s=t.n(o);function c(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var t=[],a=!0,r=!1,o=void 0;try{for(var s,c=e[Symbol.iterator]();!(a=(s=c.next()).done)&&(t.push(s.value),!n||t.length!==n);a=!0);}catch(e){r=!0,o=e}finally{try{a||null==c.return||c.return()}finally{if(r)throw o}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var l=[{name:"Johnson & Johnson",last:135.7,chg:2.33,chgp:1.75},{name:"Cisco Systems Inc.",last:46.79,chg:.43,chgp:.93},{name:"Coca-Cola Co.",last:53.49,chg:-.02,chgp:.04},{name:"Walt Disney Co.",last:130.8,chg:1.1,chgp:.85},{name:"Walmart Inc.",last:119.4,chg:-.11,chgp:.09}];n.default=function(){var e=c(Object(a.useState)(l),2),n=e[0],t=e[1],u=c(Object(a.useState)(),2),i=u[0],d=u[1];return r.a.createElement(s.a,{columns:[{Header:r.a.createElement(o.Th,null,r.a.createElement("span",null,"COMPANY"),r.a.createElement(o.Sorter,{by:"server"})),dataKey:"name",width:"*"},{Header:r.a.createElement(o.Th,null,r.a.createElement("span",null,"LAST"),r.a.createElement(o.Sorter,{by:"server"})),dataKey:"last"},{Header:r.a.createElement(o.Th,null,r.a.createElement("span",null,"CHG"),r.a.createElement(o.Sorter,{by:"server"})),dataKey:"chg"},{Header:r.a.createElement(o.Th,null,r.a.createElement("span",null,"CHG %"),r.a.createElement(o.Sorter,{by:"server"})),dataKey:"chgp"}],data:n,sorter:i,onChangeSorter:function(e){var n=e.dataKey,a=e.direction;"server"===e.by&&function(e,n){var t=function(n,t){return"name"===e?function(e,n){return e>n?1:e==n?0:e<n?-1:void 0}(n[e],t[e]):function(e,n){return e-n}(n[e],t[e])};return new Promise((function(e){var a=Array.from(l);e(a="default"===n?a:"asc"===n?a.sort(t):a.sort(t).reverse())}))}(n,a).then((function(e){t(e),d({dataKey:n,direction:a})}))}})}},140:function(e,n,t){"use strict";t.r(n);n.default="import React, { useState } from 'react'\nimport Table, { Th, Sorter } from 'designare-table'\n\nconst serverData = [\n    { name: 'Johnson & Johnson', last: 135.7, chg: 2.33, chgp: 1.75 },\n    { name: 'Cisco Systems Inc.', last: 46.79, chg: 0.43, chgp: 0.93 },\n    { name: 'Coca-Cola Co.', last: 53.49, chg: -0.02, chgp: 0.04 },\n    { name: 'Walt Disney Co.', last: 130.8, chg: 1.10, chgp: 0.85 },\n    { name: 'Walmart Inc.', last: 119.4, chg: -0.11, chgp: 0.09 }\n]\n\nconst byNumber = (a, b) => {\n    return a - b\n}\n\nconst byStr = (a, b) => {\n    if (a > b) return 1\n    if (a == b) return 0\n    if (a < b) return -1\n}\n\nconst fakeFetch = (dataKey, direction) => {\n    const by = (a, b) => dataKey === 'name'\n        ? byStr(a[dataKey], b[dataKey])\n        : byNumber(a[dataKey], b[dataKey])\n\n    return new Promise(resolve => {\n        let result = Array.from(serverData)\n        result = direction === 'default'\n            ? result\n            : direction === 'asc'\n                ? result.sort(by)\n                : result.sort(by).reverse()\n        resolve(result)\n    })\n}\n\nexport default function () {\n    const [data, setData] = useState(serverData)\n    const [sorter, setSorter] = useState()\n\n    return (\n        <Table\n            columns={[\n                {\n                    Header: <Th><span>COMPANY</span><Sorter by='server' /></Th>,\n                    dataKey: 'name',\n                    width: '*'\n                },\n                {\n                    Header: <Th><span>LAST</span><Sorter by='server' /></Th>,\n                    dataKey: 'last'\n                },\n                {\n                    Header: <Th><span>CHG</span><Sorter by='server' /></Th>,\n                    dataKey: 'chg'\n                },\n                {\n                    Header: <Th><span>CHG %</span><Sorter by='server' /></Th>,\n                    dataKey: 'chgp'\n                }\n            ]}\n            data={data}\n            sorter={sorter}\n            onChangeSorter={({ dataKey, direction, by }) => {\n                if (by === 'server') {\n                    fakeFetch(dataKey, direction).then(data => {\n                        setData(data)\n                        setSorter({ dataKey, direction })\n                    })\n                }\n            }}\n        />\n    )\n}"},166:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),o=t(3),s=t(139),c=t(140),l=t(4);n.default=function(){return r.a.createElement(o.a,{md:c.default},r.a.createElement(s.default,null),r.a.createElement(l.a,{zh:"如果by不等于‘number'，也不是一个function，就不会触发内建的前端排序。",en:"If by is neither 'number' nor a function, it bypasses front-end sorting."}))}}}]);