(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{228:function(n,e,t){"use strict";t.r(e);e.default="import React, { useState } from 'react'\nimport Table, { Th, Filter } from 'designare-table'\n\nconst serverData = [\n    { name: 'Johnson & Johnson', last: 135.7, chg: 2.33, chgp: 1.75 },\n    { name: 'Cisco Systems Inc.', last: 46.79, chg: 0.43, chgp: 0.93 },\n    { name: 'Walt Disney Co.', last: 130.8, chg: 1.10, chgp: 0.85 },\n    { name: 'Coca-Cola Co.', last: 53.49, chg: -0.02, chgp: 0.04 },\n    { name: 'Walmart Inc.', last: 119.42, chg: -0.11, chgp: 0.09 }\n]\n\nfunction fakeFetch(filters) {\n    const url = '?' + filters.map(\n        f => `k=${f.dataKey}&op=${f.operator}&v=${f.filterValue}`\n    ).join('&')\n\n    console.log(`url`, url) // example of getting url\n\n    return new Promise(resolve => {\n        setTimeout(() => {\n            const { filterValue, dataKey } = filters[0]\n            const result = serverData.filter(\n                d => !filterValue || d[dataKey].toLowerCase().indexOf(filterValue) >= 0\n            )\n            resolve(result)\n        }, 1000)\n    })\n}\n\nexport default function () {\n    const [data, setData] = useState(serverData)\n    const [filters, setFilters] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    const companyFilter = ({ filterValue = '', trigger }) => (\n        <div style={{ fontSize: 'small' }}>\n            <div style={{ padding: 10 }}>\n                <input\n                    value={filterValue}\n                    onChange={evt => {\n                        trigger(evt.target.value || undefined)\n                    }}\n                />\n            </div>\n            <div\n                style={{\n                    padding: '0 10px',\n                    height: 28,\n                    textAlign: 'right',\n                    color: '#bfbfbf',\n                    borderTop: '1px dashed rgba(0,0,0,.12)'\n                }}\n            >\n                <span\n                    role='button'\n                    style={{ lineHeight: '28px' }}\n                    onClick={evt => trigger(/* pass undefined to cancel filter */)}\n                >\n                    Reset\n                </span>\n            </div>\n        </div>\n    )\n\n    return (\n        <Table\n            loading={loading}\n            filters={filters}\n            onChangeFilters={nextFilters => {\n                setFilters(nextFilters)\n                setLoading(true)\n                fakeFetch(nextFilters).then(result => {\n                    setData(result)\n                    setLoading(false)\n                })\n            }}\n            columns={[\n                {\n                    Header: (\n                        <Th>\n                            COMPANY\n                            <Filter\n                                operator='contains' // user defined prop\n                            >\n                                {companyFilter}\n                            </Filter>\n                        </Th>\n                    ),\n                    dataKey: 'name'\n                },\n                {\n                    Header: 'LAST',\n                    dataKey: 'last'\n                },\n                {\n                    Header: 'CHG',\n                    dataKey: 'chg'\n                },\n                {\n                    Header: 'CHG%',\n                    dataKey: 'chgp'\n                }\n            ]}\n            data={data}\n        />\n    )\n}"}}]);