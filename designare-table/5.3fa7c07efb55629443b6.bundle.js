(window.webpackJsonp=window.webpackJsonp||[]).push([[5,27,28],{107:function(n,e,a){"use strict";a.r(e);var t=a(0),r=a.n(t),o=a(1),c=a.n(o);function l(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){if(!(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n)))return;var a=[],t=!0,r=!1,o=void 0;try{for(var c,l=n[Symbol.iterator]();!(t=(c=l.next()).done)&&(a.push(c.value),!e||a.length!==e);t=!0);}catch(n){r=!0,o=n}finally{try{t||null==l.return||l.return()}finally{if(r)throw o}}return a}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var s=[{name:"Johnson & Johnson",last:135.7,chg:2.33,chgp:1.75},{name:"Cisco Systems Inc.",last:46.79,chg:.43,chgp:.93},{name:"Walt Disney Co.",last:130.86,chg:1.1,chgp:.85},{name:"Coca-Cola Co.",last:53.49,chg:-.02,chgp:-.04},{name:"Walmart Inc.",last:119.42,chg:-.11,chgp:-.09}],u={cursor:"move"};e.default=function(){var n=l(Object(t.useState)(s),2),e=n[0],a=n[1];return r.a.createElement(c.a,{data:e,columns:[{Header:"COMPANY",dataKey:"name"},{Header:"LAST",dataKey:"last"},{Header:"CHG",dataKey:"chg"},{Header:"CHG%",dataKey:"chgp"}],onChangeRows:function(n){return a(n)}},r.a.createElement(o.Thead,null),r.a.createElement(o.Tbody,{tr:function(n){var e=n.cells,a=n.row;return r.a.createElement(o.DragTr,{row:a,getRowId:function(n){return n.name},style:u},e)}}))}},108:function(n,e,a){"use strict";a.r(e);e.default="import React, { useState } from 'react'\nimport Table, { Thead, Tbody, DragTr } from 'designare-table'\n\nconst originalData = [\n    { name: 'Johnson & Johnson', last: 135.7, chg: 2.33, chgp: 1.75 },\n    { name: 'Cisco Systems Inc.', last: 46.79, chg: 0.43, chgp: 0.93 },\n    { name: 'Walt Disney Co.', last: 130.86, chg: 1.10, chgp: 0.85 },\n    { name: 'Coca-Cola Co.', last: 53.49, chg: -0.02, chgp: -0.04 },\n    { name: 'Walmart Inc.', last: 119.42, chg: -0.11, chgp: -0.09 }\n]\n\nconst style = { cursor: 'move' }\n\nexport default function () {\n    const [data, setData] = useState(originalData)\n    const draggableTr = ({ cells, row }) => (\n        <DragTr\n            row={row}\n            getRowId={row => row.name}\n            style={style}\n        >\n            {cells}\n        </DragTr>\n    )\n\n    return (\n        <Table\n            data={data}\n            columns={[\n                {\n                    Header: 'COMPANY',\n                    dataKey: 'name'\n                },\n                {\n                    Header: 'LAST',\n                    dataKey: 'last'\n                },\n                {\n                    Header: 'CHG',\n                    dataKey: 'chg'\n                },\n                {\n                    Header: 'CHG%',\n                    dataKey: 'chgp'\n                }\n            ]}\n            onChangeRows={data =>\n                setData(data)\n            }\n        >\n            <Thead />\n            <Tbody tr={draggableTr} />\n        </Table>\n    )\n}"},72:function(n,e,a){"use strict";a.r(e);var t=a(0),r=a.n(t),o=a(3),c=a(38),l=a(39),s=a(107),u=a(108),d=a(4);e.default={One:function(){return r.a.createElement(o.a,{md:l.default},r.a.createElement(c.default,null),r.a.createElement(d.a,{zh:"react-dnd? 不需要的。DragTh，DragTr即插即用，减少代码量。"}))},Two:function(){return r.a.createElement(o.a,{md:u.default},r.a.createElement(s.default,null))}}}}]);