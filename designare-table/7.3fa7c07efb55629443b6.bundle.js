(window.webpackJsonp=window.webpackJsonp||[]).push([[7,27,28],{107:function(n,a,e){"use strict";e.r(a);var t=e(0),r=e.n(t),o=e(1),c=e.n(o);function l(n,a){return function(n){if(Array.isArray(n))return n}(n)||function(n,a){if(!(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n)))return;var e=[],t=!0,r=!1,o=void 0;try{for(var c,l=n[Symbol.iterator]();!(t=(c=l.next()).done)&&(e.push(c.value),!a||e.length!==a);t=!0);}catch(n){r=!0,o=n}finally{try{t||null==l.return||l.return()}finally{if(r)throw o}}return e}(n,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var s=[{name:"Johnson & Johnson",last:135.7,chg:2.33,chgp:1.75},{name:"Cisco Systems Inc.",last:46.79,chg:.43,chgp:.93},{name:"Walt Disney Co.",last:130.86,chg:1.1,chgp:.85},{name:"Coca-Cola Co.",last:53.49,chg:-.02,chgp:-.04},{name:"Walmart Inc.",last:119.42,chg:-.11,chgp:-.09}],u={cursor:"move"};a.default=function(){var n=l(Object(t.useState)(s),2),a=n[0],e=n[1];return r.a.createElement(c.a,{data:a,columns:[{Header:"COMPANY",dataKey:"name"},{Header:"LAST",dataKey:"last"},{Header:"CHG",dataKey:"chg"},{Header:"CHG%",dataKey:"chgp"}],onChangeRows:function(n){return e(n)}},r.a.createElement(o.Thead,null),r.a.createElement(o.Tbody,{tr:function(n){var a=n.cells,e=n.row;return r.a.createElement(o.DragTr,{row:e,getRowId:function(n){return n.name},style:u},a)}}))}},108:function(n,a,e){"use strict";e.r(a);a.default="import React, { useState } from 'react'\nimport Table, { Thead, Tbody, DragTr } from 'designare-table'\n\nconst originalData = [\n    { name: 'Johnson & Johnson', last: 135.7, chg: 2.33, chgp: 1.75 },\n    { name: 'Cisco Systems Inc.', last: 46.79, chg: 0.43, chgp: 0.93 },\n    { name: 'Walt Disney Co.', last: 130.86, chg: 1.10, chgp: 0.85 },\n    { name: 'Coca-Cola Co.', last: 53.49, chg: -0.02, chgp: -0.04 },\n    { name: 'Walmart Inc.', last: 119.42, chg: -0.11, chgp: -0.09 }\n]\n\nconst style = { cursor: 'move' }\n\nexport default function () {\n    const [data, setData] = useState(originalData)\n    const draggableTr = ({ cells, row }) => (\n        <DragTr\n            row={row}\n            getRowId={row => row.name}\n            style={style}\n        >\n            {cells}\n        </DragTr>\n    )\n\n    return (\n        <Table\n            data={data}\n            columns={[\n                {\n                    Header: 'COMPANY',\n                    dataKey: 'name'\n                },\n                {\n                    Header: 'LAST',\n                    dataKey: 'last'\n                },\n                {\n                    Header: 'CHG',\n                    dataKey: 'chg'\n                },\n                {\n                    Header: 'CHG%',\n                    dataKey: 'chgp'\n                }\n            ]}\n            onChangeRows={data =>\n                setData(data)\n            }\n        >\n            <Thead />\n            <Tbody tr={draggableTr} />\n        </Table>\n    )\n}"},147:function(n,a,e){"use strict";e.r(a);var t=e(0),r=e.n(t),o=e(3),c=e(107),l=e(108);a.default=function(){return r.a.createElement(o.a,{md:l.default},r.a.createElement(c.default,null))}}}]);