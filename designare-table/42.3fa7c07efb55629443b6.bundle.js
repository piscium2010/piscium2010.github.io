(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{120:function(e,n,t){"use strict";t.r(n);n.default="import React, { useState } from 'react'\nimport Table, { Thead, Tbody, Td, Icons } from 'designare-table'\n\nconst style = { display: 'flex', alignItems: 'center', userSelect: 'none', cursor: 'pointer' }\nconst one = i => ({\n    'exg': 'NASDAQ',\n    'sec': 'Consumer Services ' + i,\n    'instry': 'Catalog',\n    '1YT': '$2,250.00',\n    'sv': '5,123,142',\n    '50DAvg': '2,984,212',\n    'Prev': '$1,762.17',\n    'MC': '880,873,538,392',\n    'PE': 73.89 + i,\n    'FPE1.': '74.66822033898305',\n    'EPS': '$24.10',\n    'AD': 'N/A',\n    'Ex': 'N/A',\n    'Dividend': 'N/A',\n    'CYield': '0%',\n    'desc': 'Lorem ipsum dolor sit amet.'\n})\nconst data = (\n    function (result = []) {\n        for (let i = 0; i < 14; i++) {\n            result.push(one(i))\n        }\n        return result\n    }\n)()\n\nexport default function () {\n    const [keys, setKeys] = useState(new Set())\n    const onToggle = index => {\n        keys.has(index) ? keys.delete(index) : keys.add(index)\n        setKeys(new Set(keys))\n    }\n\n    const headerTr = ({ cells }) => <tr style={{ height: 80 }}>{cells}</tr>\n\n    const bodyTr = ({ row, rowIndex, cells, getColumns, fixed }) => {\n        const Desc = () => {\n            const cols = getColumns()\n            const leftSpan = cols.filter(c => c.fixed == 'left').length\n            const rightSpan = cols.filter(c => c.fixed == 'right').length\n            const span = cols.filter(c => !c.fixed).length\n            let element\n            switch (fixed) {\n                case 'left':\n                    element = <td colSpan={leftSpan}>Left Desc</td>\n                    break\n                case 'right':\n                    element = [\n                        <td key={0} colSpan={leftSpan + span} style={{ zIndex: 0 }}>&nbsp;</td>,\n                        <td key={1} colSpan={rightSpan}>Right Desc</td>,\n                    ]\n                    break\n                default:\n                    element = [\n                        <td key={0} colSpan={leftSpan}>&nbsp;</td>,\n                        <td key={1} colSpan={span}>{row['desc']}</td>,\n                        <td key={2} colSpan={rightSpan}>&nbsp;</td>\n                    ]\n            }\n            return <tr>{element}</tr>\n        }\n        return [<tr key={0}>{cells}</tr>, keys.has(rowIndex) ? <Desc key={1} /> : null]\n    }\n\n    const expandableCell = ({ rowIndex }) => {\n        const collapsed = keys.has(rowIndex)\n        return (\n            <Td>\n                <div\n                    className='designare-transition'\n                    style={{ ...style, color: collapsed ? '#1890ff' : 'gray' }}\n                    onClick={evt => onToggle(rowIndex)}>\n                    {\n                        collapsed\n                            ? <Icons.MinusSquare />\n                            : <Icons.PlusSquare />\n                    }\n                </div>\n            </Td>\n        )\n    }\n\n    return (\n        <div>\n            <Table\n                style={{ height: 280 }}\n                columns={[\n                    {\n                        Header: '',\n                        Cell: expandableCell,\n                        fixed: 'left'\n                    },\n                    { Header: 'Exchange', dataKey: 'exg' },\n                    { Header: 'Sector', dataKey: 'sec', width: 200, fixed: 'left' },\n                    { Header: 'Industry', dataKey: 'instry' },\n                    { Header: '1 Year Target', dataKey: '1YT' },\n                    { Header: 'Share Volume', dataKey: 'sv' },\n                    { Header: '50 Day Average Vol.', dataKey: '50DAvg' },\n                    { Header: 'Previous Close', dataKey: 'Prev' },\n                    { Header: 'Market Cap', dataKey: 'MC', fixed: 'right' },\n                    { Header: 'P/E Ratio', dataKey: 'PE', fixed: 'right' },\n                    { Header: 'Forward P/E 1 Yr', dataKey: 'FPE1.' },\n                    { Header: 'Earnings Per Share', dataKey: 'EPS' },\n                    { Header: 'Annualized Dividend', dataKey: 'AD' },\n                    { Header: 'Ex Dividend Date', dataKey: 'Ex' },\n                    { Header: 'Dividend Pay Date', dataKey: 'Dividend' },\n                    { Header: 'Current Yield', dataKey: 'CYield' }\n                ]}\n                data={data}\n            >\n                <Thead tr={headerTr} />\n                <Tbody tr={bodyTr} />\n            </Table>\n        </div>\n    )\n}"}}]);