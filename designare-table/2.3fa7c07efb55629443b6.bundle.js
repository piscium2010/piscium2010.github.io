(window.webpackJsonp=window.webpackJsonp||[]).push([[2,41,42,43,44,45,46,47,48],{119:function(e,n,a){"use strict";a.r(n);var t=a(0),r=a.n(t),d=a(1),i=a.n(d);function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){s(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function c(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var a=[],t=!0,r=!1,d=void 0;try{for(var i,l=e[Symbol.iterator]();!(t=(i=l.next()).done)&&(a.push(i.value),!n||a.length!==n);t=!0);}catch(e){r=!0,d=e}finally{try{t||null==l.return||l.return()}finally{if(r)throw d}}return a}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var u={display:"flex",alignItems:"center",userSelect:"none",cursor:"pointer"},y=function(e){return{exg:"NASDAQ",sec:"Consumer Services "+e,instry:"Catalog","1YT":"$2,250.00",sv:"5,123,142","50DAvg":"2,984,212",Prev:"$1,762.17",MC:"880,873,538,392",PE:73.89+e,"FPE1.":"74.66822033898305",EPS:"$24.10",AD:"N/A",Ex:"N/A",Dividend:"N/A",CYield:"0%",desc:"Lorem ipsum dolor sit amet."}},f=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=0;n<14;n++)e.push(y(n));return e}();n.default=function(){var e=c(Object(t.useState)(new Set),2),n=e[0],a=e[1];return r.a.createElement("div",null,r.a.createElement(i.a,{style:{height:280},columns:[{Header:"",Cell:function(e){var t=e.rowIndex,i=n.has(t);return r.a.createElement(d.Td,null,r.a.createElement("div",{className:"designare-transition",style:o({},u,{color:i?"#1890ff":"gray"}),onClick:function(e){return r=t,n.has(r)?n.delete(r):n.add(r),void a(new Set(n));var r}},i?r.a.createElement(d.Icons.MinusSquare,null):r.a.createElement(d.Icons.PlusSquare,null)))},fixed:"left"},{Header:"Exchange",dataKey:"exg"},{Header:"Sector",dataKey:"sec",width:200,fixed:"left"},{Header:"Industry",dataKey:"instry"},{Header:"1 Year Target",dataKey:"1YT"},{Header:"Share Volume",dataKey:"sv"},{Header:"50 Day Average Vol.",dataKey:"50DAvg"},{Header:"Previous Close",dataKey:"Prev"},{Header:"Market Cap",dataKey:"MC",fixed:"right"},{Header:"P/E Ratio",dataKey:"PE",fixed:"right"},{Header:"Forward P/E 1 Yr",dataKey:"FPE1."},{Header:"Earnings Per Share",dataKey:"EPS"},{Header:"Annualized Dividend",dataKey:"AD"},{Header:"Ex Dividend Date",dataKey:"Ex"},{Header:"Dividend Pay Date",dataKey:"Dividend"},{Header:"Current Yield",dataKey:"CYield"}],data:f},r.a.createElement(d.Thead,{tr:function(e){var n=e.cells;return r.a.createElement("tr",{style:{height:80}},n)}}),r.a.createElement(d.Tbody,{tr:function(e){var a=e.row,t=e.rowIndex,d=e.cells,i=e.getColumns,l=e.fixed;return[r.a.createElement("tr",{key:0},d),n.has(t)?r.a.createElement((function(){var e,n=i(),t=n.filter((function(e){return"left"==e.fixed})).length,d=n.filter((function(e){return"right"==e.fixed})).length,o=n.filter((function(e){return!e.fixed})).length;switch(l){case"left":e=r.a.createElement("td",{colSpan:t},"Left Desc");break;case"right":e=[r.a.createElement("td",{key:0,colSpan:t+o,style:{zIndex:0}}," "),r.a.createElement("td",{key:1,colSpan:d},"Right Desc")];break;default:e=[r.a.createElement("td",{key:0,colSpan:t}," "),r.a.createElement("td",{key:1,colSpan:o},a.desc),r.a.createElement("td",{key:2,colSpan:d}," ")]}return r.a.createElement("tr",null,e)}),{key:1}):null]}})))}},120:function(e,n,a){"use strict";a.r(n);n.default="import React, { useState } from 'react'\nimport Table, { Thead, Tbody, Td, Icons } from 'designare-table'\n\nconst style = { display: 'flex', alignItems: 'center', userSelect: 'none', cursor: 'pointer' }\nconst one = i => ({\n    'exg': 'NASDAQ',\n    'sec': 'Consumer Services ' + i,\n    'instry': 'Catalog',\n    '1YT': '$2,250.00',\n    'sv': '5,123,142',\n    '50DAvg': '2,984,212',\n    'Prev': '$1,762.17',\n    'MC': '880,873,538,392',\n    'PE': 73.89 + i,\n    'FPE1.': '74.66822033898305',\n    'EPS': '$24.10',\n    'AD': 'N/A',\n    'Ex': 'N/A',\n    'Dividend': 'N/A',\n    'CYield': '0%',\n    'desc': 'Lorem ipsum dolor sit amet.'\n})\nconst data = (\n    function (result = []) {\n        for (let i = 0; i < 14; i++) {\n            result.push(one(i))\n        }\n        return result\n    }\n)()\n\nexport default function () {\n    const [keys, setKeys] = useState(new Set())\n    const onToggle = index => {\n        keys.has(index) ? keys.delete(index) : keys.add(index)\n        setKeys(new Set(keys))\n    }\n\n    const headerTr = ({ cells }) => <tr style={{ height: 80 }}>{cells}</tr>\n\n    const bodyTr = ({ row, rowIndex, cells, getColumns, fixed }) => {\n        const Desc = () => {\n            const cols = getColumns()\n            const leftSpan = cols.filter(c => c.fixed == 'left').length\n            const rightSpan = cols.filter(c => c.fixed == 'right').length\n            const span = cols.filter(c => !c.fixed).length\n            let element\n            switch (fixed) {\n                case 'left':\n                    element = <td colSpan={leftSpan}>Left Desc</td>\n                    break\n                case 'right':\n                    element = [\n                        <td key={0} colSpan={leftSpan + span} style={{ zIndex: 0 }}>&nbsp;</td>,\n                        <td key={1} colSpan={rightSpan}>Right Desc</td>,\n                    ]\n                    break\n                default:\n                    element = [\n                        <td key={0} colSpan={leftSpan}>&nbsp;</td>,\n                        <td key={1} colSpan={span}>{row['desc']}</td>,\n                        <td key={2} colSpan={rightSpan}>&nbsp;</td>\n                    ]\n            }\n            return <tr>{element}</tr>\n        }\n        return [<tr key={0}>{cells}</tr>, keys.has(rowIndex) ? <Desc key={1} /> : null]\n    }\n\n    const expandableCell = ({ rowIndex }) => {\n        const collapsed = keys.has(rowIndex)\n        return (\n            <Td>\n                <div\n                    className='designare-transition'\n                    style={{ ...style, color: collapsed ? '#1890ff' : 'gray' }}\n                    onClick={evt => onToggle(rowIndex)}>\n                    {\n                        collapsed\n                            ? <Icons.MinusSquare />\n                            : <Icons.PlusSquare />\n                    }\n                </div>\n            </Td>\n        )\n    }\n\n    return (\n        <div>\n            <Table\n                style={{ height: 280 }}\n                columns={[\n                    {\n                        Header: '',\n                        Cell: expandableCell,\n                        fixed: 'left'\n                    },\n                    { Header: 'Exchange', dataKey: 'exg' },\n                    { Header: 'Sector', dataKey: 'sec', width: 200, fixed: 'left' },\n                    { Header: 'Industry', dataKey: 'instry' },\n                    { Header: '1 Year Target', dataKey: '1YT' },\n                    { Header: 'Share Volume', dataKey: 'sv' },\n                    { Header: '50 Day Average Vol.', dataKey: '50DAvg' },\n                    { Header: 'Previous Close', dataKey: 'Prev' },\n                    { Header: 'Market Cap', dataKey: 'MC', fixed: 'right' },\n                    { Header: 'P/E Ratio', dataKey: 'PE', fixed: 'right' },\n                    { Header: 'Forward P/E 1 Yr', dataKey: 'FPE1.' },\n                    { Header: 'Earnings Per Share', dataKey: 'EPS' },\n                    { Header: 'Annualized Dividend', dataKey: 'AD' },\n                    { Header: 'Ex Dividend Date', dataKey: 'Ex' },\n                    { Header: 'Dividend Pay Date', dataKey: 'Dividend' },\n                    { Header: 'Current Yield', dataKey: 'CYield' }\n                ]}\n                data={data}\n            >\n                <Thead tr={headerTr} />\n                <Tbody tr={bodyTr} />\n            </Table>\n        </div>\n    )\n}"},121:function(e,n,a){"use strict";a.r(n);var t=a(0),r=a.n(t),d=a(1),i=a.n(d);function l(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var a=[],t=!0,r=!1,d=void 0;try{for(var i,l=e[Symbol.iterator]();!(t=(i=l.next()).done)&&(a.push(i.value),!n||a.length!==n);t=!0);}catch(e){r=!0,d=e}finally{try{t||null==l.return||l.return()}finally{if(r)throw d}}return a}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var o={exg:"NASDAQ",sec:"Consumer Services",instry:"Catalog","1YT":"$2,250.00",sv:"5,123,142","50DAvg":"2,984,212",Prev:"$1,762.17",MC:"880,873,538,392",PE:"73.89","FPE1.":"74.66822033898305",EPS:"$24.10",AD:"N/A",Ex:"N/A",Dividend:"N/A",CYield:"0%"},s=function(){for(var e=[],n=0;n<5;n++)e.push(o);return e}();n.default=function(){var e=l(Object(t.useState)({}),1)[0],n=l(Object(t.useState)(),2),a=n[0],o=n[1],c=function(n){var a=n.currentTarget.dataset.i;o(a),e.i=a},u=function(n){var a=n.currentTarget.dataset.i;setTimeout((function(){a===e.i&&o(null)}),100)};return r.a.createElement(i.a,{columns:[{Header:"Exchange",dataKey:"exg"},{Header:"Sector",dataKey:"sec",width:200,fixed:"left"},{Header:"Industry",dataKey:"instry",fixed:"right"},{Header:"1 Year Target",dataKey:"1YT",fixed:"left"},{Header:"Share Volume",dataKey:"sv"},{Header:"50 Day Average Vol.",dataKey:"50DAvg"},{Header:"Previous Close",dataKey:"Prev"},{Header:"Market Cap",dataKey:"MC"},{Header:"P/E Ratio",dataKey:"PE",fixed:"right"},{Header:"Forward P/E 1 Yr",dataKey:"FPE1."},{Header:"Earnings Per Share",dataKey:"EPS"},{Header:"Annualized Dividend",dataKey:"AD"},{Header:"Ex Dividend Date",dataKey:"Ex"},{Header:"Dividend Pay Date",dataKey:"Dividend"},{Header:"Current Yield",dataKey:"CYield"}],data:s},r.a.createElement(d.Thead,null),r.a.createElement(d.Tbody,{tr:function(e){var n=e.cells,t=e.rowIndex;return r.a.createElement("tr",{style:{backgroundColor:t==a?"#f0f8ff":""},"data-i":t,onMouseOver:c,onMouseLeave:u},n)}}))}},122:function(e,n,a){"use strict";a.r(n);n.default="import React, { useState } from 'react'\nimport Table, { Thead, Tbody } from 'designare-table'\n\nconst one = {\n    'exg': 'NASDAQ',\n    'sec': 'Consumer Services',\n    'instry': 'Catalog',\n    '1YT': '$2,250.00',\n    'sv': '5,123,142',\n    '50DAvg': '2,984,212',\n    'Prev': '$1,762.17',\n    'MC': '880,873,538,392',\n    'PE': '73.89',\n    'FPE1.': '74.66822033898305',\n    'EPS': '$24.10',\n    'AD': 'N/A',\n    'Ex': 'N/A',\n    'Dividend': 'N/A',\n    'CYield': '0%'\n}\n\nconst data = (function () {\n    const r = []\n    for (let i = 0; i < 5; i++) r.push(one)\n    return r\n})()\n\nexport default function () {\n    const [store] = useState({})\n    const [hoverIndex, setHoverIndex] = useState()\n    const onMouseOver = evt => {\n        const rowIndex = evt.currentTarget.dataset['i']\n        setHoverIndex(rowIndex)\n        store.i = rowIndex\n    }\n    const onMouseLeave = evt => {\n        const rowIndex = evt.currentTarget.dataset['i']\n        setTimeout(() => {\n            rowIndex === store.i\n                ? setHoverIndex(null)\n                : undefined\n        }, 100)\n    }\n\n    const tr = ({ cells, rowIndex }) => (\n        <tr\n            style={{ backgroundColor: rowIndex == hoverIndex ? '#f0f8ff' : '' }}\n            data-i={rowIndex}\n            onMouseOver={onMouseOver}\n            onMouseLeave={onMouseLeave}\n        >\n            {cells}\n        </tr>\n    )\n\n    return (\n        <Table\n            columns={[\n                { Header: 'Exchange', dataKey: 'exg' },\n                { Header: 'Sector', dataKey: 'sec', width: 200, fixed: 'left' },\n                { Header: 'Industry', dataKey: 'instry', fixed: 'right' },\n                { Header: '1 Year Target', dataKey: '1YT', fixed: 'left' },\n                { Header: 'Share Volume', dataKey: 'sv' },\n                { Header: '50 Day Average Vol.', dataKey: '50DAvg' },\n                { Header: 'Previous Close', dataKey: 'Prev' },\n                { Header: 'Market Cap', dataKey: 'MC' },\n                { Header: 'P/E Ratio', dataKey: 'PE', fixed: 'right' },\n                { Header: 'Forward P/E 1 Yr', dataKey: 'FPE1.' },\n                { Header: 'Earnings Per Share', dataKey: 'EPS' },\n                { Header: 'Annualized Dividend', dataKey: 'AD' },\n                { Header: 'Ex Dividend Date', dataKey: 'Ex' },\n                { Header: 'Dividend Pay Date', dataKey: 'Dividend' },\n                { Header: 'Current Yield', dataKey: 'CYield' }\n            ]}\n            data={data}\n        >\n            <Thead />\n            <Tbody tr={tr} />\n        </Table >\n    )\n}"},123:function(e,n,a){"use strict";a.r(n);var t=a(0),r=a.n(t),d=a(1),i=a.n(d),l={exg:"NASDAQ",sec:"Consumer Services",instry:"Catalog","1YT":"$2,250.00",sv:"5,123,142","50DAvg":"2,984,212",Prev:"$1,762.17",MC:"880,873,538,392",PE:"73.89","FPE1.":"74.66822033898305",EPS:"$24.10",AD:"N/A",Ex:"N/A",Dividend:"N/A",CYield:"0%"},o=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=0;n<16;n++)e.push(l);return e}();n.default=function(){return r.a.createElement("div",null,r.a.createElement(i.a,{style:{height:280},columns:[{Header:"Exchange",dataKey:"exg"},{Header:"Sector",dataKey:"sec",width:200,fixed:"left"},{Header:"Industry",dataKey:"instry"},{Header:"1 Year Target",dataKey:"1YT",fixed:"left"},{Header:"Share Volume",dataKey:"sv"},{Header:"50 Day Average Vol.",dataKey:"50DAvg"},{Header:"Previous Close",dataKey:"Prev"},{Header:"Market Cap",dataKey:"MC"},{Header:"P/E Ratio",dataKey:"PE"},{Header:"Forward P/E 1 Yr",dataKey:"FPE1."},{Header:"Earnings Per Share",dataKey:"EPS"},{Header:"Annualized Dividend",dataKey:"AD"},{Header:"Ex Dividend Date",dataKey:"Ex"},{Header:"Dividend Pay Date",dataKey:"Dividend"},{Header:"Current Yield",dataKey:"CYield"}],data:o},r.a.createElement(d.Thead,{tr:function(e){var n=e.cells;return r.a.createElement("tr",{style:{height:80}},n)}}),r.a.createElement(d.Tbody,null)))}},124:function(e,n,a){"use strict";a.r(n);n.default="import React from 'react'\nimport Table, { Thead, Tbody } from 'designare-table'\n\nconst one = {\n    'exg': 'NASDAQ',\n    'sec': 'Consumer Services',\n    'instry': 'Catalog',\n    '1YT': '$2,250.00',\n    'sv': '5,123,142',\n    '50DAvg': '2,984,212',\n    'Prev': '$1,762.17',\n    'MC': '880,873,538,392',\n    'PE': '73.89',\n    'FPE1.': '74.66822033898305',\n    'EPS': '$24.10',\n    'AD': 'N/A',\n    'Ex': 'N/A',\n    'Dividend': 'N/A',\n    'CYield': '0%'\n}\n\nconst data = (\n    function (result = []) {\n        for (let i = 0; i < 16; i++) result.push(one)\n        return result\n    }\n)()\n\nexport default function () {\n    const tr = ({ cells }) => <tr style={{ height: 80 }}>{cells}</tr>\n    return (\n        <div>\n            <Table\n                style={{ height: 280 }}\n                columns={[\n                    { Header: 'Exchange', dataKey: 'exg' },\n                    { Header: 'Sector', dataKey: 'sec', width: 200, fixed: 'left' },\n                    { Header: 'Industry', dataKey: 'instry' },\n                    { Header: '1 Year Target', dataKey: '1YT', fixed: 'left' },\n                    { Header: 'Share Volume', dataKey: 'sv' },\n                    { Header: '50 Day Average Vol.', dataKey: '50DAvg' },\n                    { Header: 'Previous Close', dataKey: 'Prev' },\n                    { Header: 'Market Cap', dataKey: 'MC' },\n                    { Header: 'P/E Ratio', dataKey: 'PE' },\n                    { Header: 'Forward P/E 1 Yr', dataKey: 'FPE1.' },\n                    { Header: 'Earnings Per Share', dataKey: 'EPS' },\n                    { Header: 'Annualized Dividend', dataKey: 'AD' },\n                    { Header: 'Ex Dividend Date', dataKey: 'Ex' },\n                    { Header: 'Dividend Pay Date', dataKey: 'Dividend' },\n                    { Header: 'Current Yield', dataKey: 'CYield' }\n                ]}\n                data={data}\n            >\n                <Thead tr={tr} />\n                <Tbody />\n            </Table>\n        </div>\n    )\n}"},125:function(e,n,a){"use strict";a.r(n);var t=a(0),r=a.n(t),d=a(1),i=a.n(d),l={exg:"NASDAQ",sec:"Consumer Services",instry:"Catalog","1YT":"$2,250.00",sv:"5,123,142","50DAvg":"2,984,212",Prev:"$1,762.17",MC:"880,873,538,392",PE:"73.89","FPE1.":"74.66822033898305",EPS:"$24.10",AD:"N/A",Ex:"N/A",Dividend:"N/A",CYield:"0%"},o=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=0;n<14;n++)e.push(l);return e}();n.default=function(){return r.a.createElement("div",null,r.a.createElement(i.a,{style:{height:280},columns:[{Header:"Exchange",dataKey:"exg"},{Header:"Sector",dataKey:"sec",width:200,fixed:"left"},{Header:"Industry",dataKey:"instry"},{Header:"1 Year Target",dataKey:"1YT"},{Header:"Share Volume",dataKey:"sv"},{Header:"50 Day Average Vol.",dataKey:"50DAvg"},{Header:"Previous Close",dataKey:"Prev"},{Header:"Market Cap",dataKey:"MC",fixed:"right"},{Header:"P/E Ratio",dataKey:"PE",fixed:"right"},{Header:"Forward P/E 1 Yr",dataKey:"FPE1."},{Header:"Earnings Per Share",dataKey:"EPS"},{Header:"Annualized Dividend",dataKey:"AD"},{Header:"Ex Dividend Date",dataKey:"Ex"},{Header:"Dividend Pay Date",dataKey:"Dividend"},{Header:"Current Yield",dataKey:"CYield"}],data:o},r.a.createElement(d.Thead,{tr:function(e){var n=e.cells;return r.a.createElement("tr",{style:{height:80}},n)}}),r.a.createElement(d.Tbody,null)))}},126:function(e,n,a){"use strict";a.r(n);n.default="import React from 'react'\nimport Table, { Thead, Tbody } from 'designare-table'\n\nconst one = {\n    'exg': 'NASDAQ',\n    'sec': 'Consumer Services',\n    'instry': 'Catalog',\n    '1YT': '$2,250.00',\n    'sv': '5,123,142',\n    '50DAvg': '2,984,212',\n    'Prev': '$1,762.17',\n    'MC': '880,873,538,392',\n    'PE': '73.89',\n    'FPE1.': '74.66822033898305',\n    'EPS': '$24.10',\n    'AD': 'N/A',\n    'Ex': 'N/A',\n    'Dividend': 'N/A',\n    'CYield': '0%'\n}\n\nconst data = (\n    function (result = []) {\n        for (let i = 0; i < 14; i++) result.push(one)\n        return result\n    }\n)()\n\nexport default function () {\n    const tr = ({ cells }) => <tr style={{ height: 80 }}>{cells}</tr>\n    return (\n        <div>\n            <Table\n                style={{ height: 280 }}\n                columns={[\n                    { Header: 'Exchange', dataKey: 'exg' },\n                    { Header: 'Sector', dataKey: 'sec', width: 200, fixed: 'left' },\n                    { Header: 'Industry', dataKey: 'instry' },\n                    { Header: '1 Year Target', dataKey: '1YT' },\n                    { Header: 'Share Volume', dataKey: 'sv' },\n                    { Header: '50 Day Average Vol.', dataKey: '50DAvg' },\n                    { Header: 'Previous Close', dataKey: 'Prev' },\n                    { Header: 'Market Cap', dataKey: 'MC', fixed: 'right' },\n                    { Header: 'P/E Ratio', dataKey: 'PE', fixed: 'right' },\n                    { Header: 'Forward P/E 1 Yr', dataKey: 'FPE1.' },\n                    { Header: 'Earnings Per Share', dataKey: 'EPS' },\n                    { Header: 'Annualized Dividend', dataKey: 'AD' },\n                    { Header: 'Ex Dividend Date', dataKey: 'Ex' },\n                    { Header: 'Dividend Pay Date', dataKey: 'Dividend' },\n                    { Header: 'Current Yield', dataKey: 'CYield' }\n                ]}\n                data={data}\n            >\n                <Thead tr={tr} />\n                <Tbody />\n            </Table>\n        </div>\n    )\n}"},74:function(e,n,a){"use strict";a.r(n);var t=a(0),r=a.n(t),d=a(3),i=a(33),l=a(34),o=a(123),s=a(124),c=a(125),u=a(126),y=a(119),f=a(120),v=a(121),E=a(122),g=a(4);n.default={One:function(){return r.a.createElement(d.a,{md:l.default},r.a.createElement(i.default,null),r.a.createElement(g.a,{zh:"和自然的div一样，给一个高度，它就滚了。"}))},Two:function(){return r.a.createElement(d.a,{md:s.default},r.a.createElement(o.default,null))},Three:function(){return r.a.createElement(d.a,{md:u.default},r.a.createElement(c.default,null))},Four:function(){return r.a.createElement(d.a,{md:f.default},r.a.createElement(y.default,null))},Five:function(){return r.a.createElement(d.a,{md:E.default},r.a.createElement(v.default,null),r.a.createElement(g.a,{zh:"让固定列也响应hover事件，需要借助js。"}))}}}}]);