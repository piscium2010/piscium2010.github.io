(window.webpackJsonp=window.webpackJsonp||[]).push([[13,41,42],{231:function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),d=t(2),l=t.n(d);function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(t,!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(t).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var t=[],r=!0,a=!1,d=void 0;try{for(var l,i=e[Symbol.iterator]();!(r=(l=i.next()).done)&&(t.push(l.value),!n||t.length!==n);r=!0);}catch(e){a=!0,d=e}finally{try{r||null==i.return||i.return()}finally{if(a)throw d}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var u={display:"flex",alignItems:"center",userSelect:"none",cursor:"pointer"},y=function(e){return{exg:"NASDAQ",sec:"Consumer Services "+e,instry:"Catalog","1YT":"$2,250.00",sv:"5,123,142","50DAvg":"2,984,212",Prev:"$1,762.17",MC:"880,873,538,392",PE:73.89+e,"FPE1.":"74.66822033898305",EPS:"$24.10",AD:"N/A",Ex:"N/A",Dividend:"N/A",CYield:"0%",desc:"Lorem ipsum dolor sit amet."}},f=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=0;n<14;n++)e.push(y(n));return e}();n.default=function(){var e=s(Object(r.useState)(new Set),2),n=e[0],t=e[1];return a.a.createElement("div",null,a.a.createElement(l.a,{style:{height:280},columns:[{Header:"",Cell:function(e){var r=e.rowIndex,l=n.has(r);return a.a.createElement(d.Td,null,a.a.createElement("div",{className:"designare-transition",style:o({},u,{color:l?"#1890ff":"gray"}),onClick:function(e){return a=r,n.has(a)?n.delete(a):n.add(a),void t(new Set(n));var a}},l?a.a.createElement(d.Icons.MinusSquare,null):a.a.createElement(d.Icons.PlusSquare,null)))},fixed:"left"},{Header:"Exchange",dataKey:"exg"},{Header:"Sector",dataKey:"sec",width:200,fixed:"left"},{Header:"Industry",dataKey:"instry"},{Header:"1 Year Target",dataKey:"1YT"},{Header:"Share Volume",dataKey:"sv"},{Header:"50 Day Average Vol.",dataKey:"50DAvg"},{Header:"Previous Close",dataKey:"Prev"},{Header:"Market Cap",dataKey:"MC",fixed:"right"},{Header:"P/E Ratio",dataKey:"PE",fixed:"right"},{Header:"Forward P/E 1 Yr",dataKey:"FPE1."},{Header:"Earnings Per Share",dataKey:"EPS"},{Header:"Annualized Dividend",dataKey:"AD"},{Header:"Ex Dividend Date",dataKey:"Ex"},{Header:"Dividend Pay Date",dataKey:"Dividend"},{Header:"Current Yield",dataKey:"CYield"}],data:f},a.a.createElement(d.Thead,{tr:function(e){var n=e.cells;return a.a.createElement("tr",{style:{height:80}},n)}}),a.a.createElement(d.Tbody,{tr:function(e){var t=e.row,r=e.rowIndex,d=e.cells,l=e.getColumns,i=e.fixed;return[a.a.createElement("tr",{key:0},d),n.has(r)?a.a.createElement((function(){var e,n=l(),r=n.filter((function(e){return"left"==e.fixed})).length,d=n.filter((function(e){return"right"==e.fixed})).length,o=n.filter((function(e){return!e.fixed})).length;switch(i){case"left":e=a.a.createElement("td",{colSpan:r},"Left Desc");break;case"right":e=[a.a.createElement("td",{key:0,colSpan:r+o,style:{zIndex:0}}," "),a.a.createElement("td",{key:1,colSpan:d},"Right Desc")];break;default:e=[a.a.createElement("td",{key:0,colSpan:r}," "),a.a.createElement("td",{key:1,colSpan:o},t.desc),a.a.createElement("td",{key:2,colSpan:d}," ")]}return a.a.createElement("tr",null,e)}),{key:1}):null]}})))}},232:function(e,n,t){"use strict";t.r(n);n.default="import React, { useState } from 'react'\nimport Table, { Thead, Tbody, Td, Icons } from 'designare-table'\n\nconst style = { display: 'flex', alignItems: 'center', userSelect: 'none', cursor: 'pointer' }\nconst one = i => ({\n    'exg': 'NASDAQ',\n    'sec': 'Consumer Services ' + i,\n    'instry': 'Catalog',\n    '1YT': '$2,250.00',\n    'sv': '5,123,142',\n    '50DAvg': '2,984,212',\n    'Prev': '$1,762.17',\n    'MC': '880,873,538,392',\n    'PE': 73.89 + i,\n    'FPE1.': '74.66822033898305',\n    'EPS': '$24.10',\n    'AD': 'N/A',\n    'Ex': 'N/A',\n    'Dividend': 'N/A',\n    'CYield': '0%',\n    'desc': 'Lorem ipsum dolor sit amet.'\n})\nconst data = (\n    function (result = []) {\n        for (let i = 0; i < 14; i++) {\n            result.push(one(i))\n        }\n        return result\n    }\n)()\n\nexport default function () {\n    const [keys, setKeys] = useState(new Set())\n    const onToggle = index => {\n        keys.has(index) ? keys.delete(index) : keys.add(index)\n        setKeys(new Set(keys))\n    }\n\n    const headerTr = ({ cells }) => <tr style={{ height: 80 }}>{cells}</tr>\n\n    const bodyTr = ({ row, rowIndex, cells, getColumns, fixed }) => {\n        const Desc = () => {\n            const cols = getColumns()\n            const leftSpan = cols.filter(c => c.fixed == 'left').length\n            const rightSpan = cols.filter(c => c.fixed == 'right').length\n            const span = cols.filter(c => !c.fixed).length\n            let element\n            switch (fixed) {\n                case 'left':\n                    element = <td colSpan={leftSpan}>Left Desc</td>\n                    break\n                case 'right':\n                    element = [\n                        <td key={0} colSpan={leftSpan + span} style={{ zIndex: 0 }}>&nbsp;</td>,\n                        <td key={1} colSpan={rightSpan}>Right Desc</td>,\n                    ]\n                    break\n                default:\n                    element = [\n                        <td key={0} colSpan={leftSpan}>&nbsp;</td>,\n                        <td key={1} colSpan={span}>{row['desc']}</td>,\n                        <td key={2} colSpan={rightSpan}>&nbsp;</td>\n                    ]\n            }\n            return <tr>{element}</tr>\n        }\n        return [<tr key={0}>{cells}</tr>, keys.has(rowIndex) ? <Desc key={1} /> : null]\n    }\n\n    const expandableCell = ({ rowIndex }) => {\n        const collapsed = keys.has(rowIndex)\n        return (\n            <Td>\n                <div\n                    className='designare-transition'\n                    style={{ ...style, color: collapsed ? '#1890ff' : 'gray' }}\n                    onClick={evt => onToggle(rowIndex)}>\n                    {\n                        collapsed\n                            ? <Icons.MinusSquare />\n                            : <Icons.PlusSquare />\n                    }\n                </div>\n            </Td>\n        )\n    }\n\n    return (\n        <div>\n            <Table\n                style={{ height: 280 }}\n                columns={[\n                    {\n                        Header: '',\n                        Cell: expandableCell,\n                        fixed: 'left'\n                    },\n                    { Header: 'Exchange', dataKey: 'exg' },\n                    { Header: 'Sector', dataKey: 'sec', width: 200, fixed: 'left' },\n                    { Header: 'Industry', dataKey: 'instry' },\n                    { Header: '1 Year Target', dataKey: '1YT' },\n                    { Header: 'Share Volume', dataKey: 'sv' },\n                    { Header: '50 Day Average Vol.', dataKey: '50DAvg' },\n                    { Header: 'Previous Close', dataKey: 'Prev' },\n                    { Header: 'Market Cap', dataKey: 'MC', fixed: 'right' },\n                    { Header: 'P/E Ratio', dataKey: 'PE', fixed: 'right' },\n                    { Header: 'Forward P/E 1 Yr', dataKey: 'FPE1.' },\n                    { Header: 'Earnings Per Share', dataKey: 'EPS' },\n                    { Header: 'Annualized Dividend', dataKey: 'AD' },\n                    { Header: 'Ex Dividend Date', dataKey: 'Ex' },\n                    { Header: 'Dividend Pay Date', dataKey: 'Dividend' },\n                    { Header: 'Current Yield', dataKey: 'CYield' }\n                ]}\n                data={data}\n            >\n                <Thead tr={headerTr} />\n                <Tbody tr={bodyTr} />\n            </Table>\n        </div>\n    )\n}"},268:function(e,n,t){"use strict";t.r(n);var r=t(0),a=t.n(r),d=t(4),l=t(231),i=t(232);n.default=function(){return a.a.createElement(d.a,{md:i.default},a.a.createElement(l.default,null))}}}]);